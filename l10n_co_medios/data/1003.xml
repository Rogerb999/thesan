<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <!-- 1003 -->
        <record id="l10n_co_medios_1003" model="magnetic.media">
            <field name="code">1003</field>
            <field name="name">1003 - Retención en la fuente que le practicaron</field>
            <field name="smaller_amount">0</field>
            <field name="query">SELECT
                A as "Concepto",
                B as "Tipo documento",
                C as "Número identificación del informado",
                D as "DV",
                E as "Primer apellido del informado",
                F as "Segundo apellido del informado",
                G as "Primer nombre del informado",
                H as "Segundo nombre del informado",
                I as "Razón social del informado",
                J as "Direccion del informado",
                K as "Código departamento",
                L as "Código municipio",
                SUM(M) as "Valor acumulado del pago o abono sujeto a retención en la fuente",
                SUM(N) as "Retención en la fuente que le practicaron"
                FROM
                (
                SELECT
                mml.code as A,
                rp.vat_type as B,
                rp.vat as C,
                rp.vat_vd as D,
                rp.firstname as E,
                rp.other_name as F,
                rp.lastname as G,
                rp.other_lastname as H,
                (
                CASE WHEN rp.is_company = 'f' THEN '' 
                WHEN rp.is_company = 't' THEN rp.name END
                ) AS I,
                rp.street as J,
                rcs.dian_state_code as K,
                rcsc.code as L,
                (
                CASE WHEN mmlc.sequence = 'M' AND mmlc.type = 'd' THEN abs(ROUND(SUM(aml.debit)::integer,0))
                WHEN mmlc.sequence = 'M' AND mmlc.type = 'c' THEN abs(ROUND(SUM(aml.credit)::integer,0))
                WHEN mmlc.sequence = 'M' AND mmlc.type = 'sf' THEN abs(ROUND(SUM(aml.debit-aml.credit)::integer,0)) ELSE 0 END
                ) as M,
                (
                CASE WHEN mmlc.sequence = 'N' AND mmlc.type = 'd' THEN abs(ROUND(SUM(aml.debit)::integer,0))
                WHEN mmlc.sequence = 'N' AND mmlc.type = 'c' THEN abs(ROUND(SUM(aml.credit)::integer,0))
                WHEN mmlc.sequence = 'N' AND mmlc.type = 'sf' THEN abs(ROUND(SUM(aml.debit-aml.credit)::integer,0)) ELSE  0 END
                ) as N
                FROM
                 magnetic_media mm
                INNER JOIN magnetic_media_lines mml ON mml.magnetic_id = mm.id
                INNER JOIN magnetic_media_lines_concepts mmlc ON mmlc.line_id = mml.id
                inner join (
                select aammlcr.account_account_id as account_id, aammlcr.magnetic_media_lines_concepts_id as concept_id
                from account_account_magnetic_media_lines_concepts_rel aammlcr
                union all
                select aaat.account_account_id as account_id, mmlcaat.concept_ids as concept_id
                from magnetic_media_lines_concepts_account_account_tag mmlcaat
                inner join account_account_tag aat on aat.id = mmlcaat.tag_ids
                inner join account_account_account_tag aaat on aaat.account_account_tag_id = aat.id
                ) as aa on aa.concept_id = mmlc.id
                INNER JOIN account_move_line aml ON aml.account_id = aa.account_id
                LEFT JOIN res_partner rp ON rp.id = aml.partner_id
                LEFT JOIN res_country_state rcs ON rcs.id = rp.state_id
                LEFT JOIN res_country_state_city rcsc ON rcsc.id = rp.city_id
                LEFT JOIN res_country rc ON rc.id = rp.country_id
                WHERE
                mm.id = {id}
                AND aml.date BETWEEN '{date_from}'
                AND '{date_to}'
                GROUP BY
                mml.code,
                rp.vat_type,
                rp.vat,
                rp.vat_vd,
                rp.firstname,
                rp.other_name,
                rp.lastname,
                rp.other_lastname,
                rp.name,
                rp.street,
                rp.is_company,
                rcs.dian_state_code,
                rcsc.code,
				mmlc.sequence,
                mmlc.type,
                mm.smaller_amount
                HAVING
                abs(ROUND(SUM(aml.debit-aml.credit)::integer,0))::integer > mm.smaller_amount::integer
                UNION
                SELECT
                mml.code as A,
                '43' as B,
                '222222222' as C,
                '7' as D,
                'CUANTIAS MENORES' as E,
				'' as F,
				'' as G,
				'' as H,
				'' as I,
                NULL as J,
                NULL as K,
                NULL as L,
                (
                CASE WHEN mmlc.sequence = 'M' AND mmlc.type = 'd' THEN abs(ROUND(SUM(aml.debit)::integer,0))
                WHEN mmlc.sequence = 'M' AND mmlc.type = 'c' THEN abs(ROUND(SUM(aml.credit)::integer,0))
                WHEN mmlc.sequence = 'M' AND mmlc.type = 'sf' THEN abs(ROUND(SUM(aml.debit-aml.credit)::integer,0))  ELSE 0 END
                ) as M,
                (
                CASE WHEN mmlc.sequence = 'N' AND mmlc.type = 'd' THEN abs(ROUND(SUM(aml.debit)::integer,0))
                WHEN mmlc.sequence = 'N' AND mmlc.type = 'c' THEN abs(ROUND(SUM(aml.credit)::integer,0))
                WHEN mmlc.sequence = 'N' AND mmlc.type = 'sf' THEN abs(ROUND(SUM(aml.debit-aml.credit)::integer,0)) ELSE 0  END
                ) as N
                FROM
                 magnetic_media mm
                INNER JOIN magnetic_media_lines mml ON mml.magnetic_id = mm.id
                INNER JOIN magnetic_media_lines_concepts mmlc ON mmlc.line_id = mml.id
                inner join (
                select aammlcr.account_account_id as account_id, aammlcr.magnetic_media_lines_concepts_id as concept_id
                from account_account_magnetic_media_lines_concepts_rel aammlcr
                union all
                select aaat.account_account_id as account_id, mmlcaat.concept_ids as concept_id
                from magnetic_media_lines_concepts_account_account_tag mmlcaat
                inner join account_account_tag aat on aat.id = mmlcaat.tag_ids
                inner join account_account_account_tag aaat on aaat.account_account_tag_id = aat.id
                ) as aa on aa.concept_id = mmlc.id
                INNER JOIN account_move_line aml ON aml.account_id = aa.account_id
                WHERE
                mm.id = {id}
                AND aml.date BETWEEN '{date_from}'
                AND '{date_to}'
                GROUP BY
                mml.code,
                mmlc.sequence,
                mmlc.type,
                mm.smaller_amount
                HAVING
                abs(ROUND(SUM(aml.debit-aml.credit)::integer,0))::integer &lt; mm.smaller_amount::integer
                ) as datos
                GROUP BY
                A,
                B,
                C,
                D,
                E,
                F,
                G,
                H,
                I,
                J,
                K,
                L</field>
        </record>
    </data>
</odoo>
